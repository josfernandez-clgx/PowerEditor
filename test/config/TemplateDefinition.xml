<?xml version="1.0"?>
<EditorDefinitions>

	<AdHocRuleAction id="100" name="Disqualify Loan">
		<Description>Use this to disqualify a loan</Description>
		<UsageList>
			<Usage>Product-Qualify</Usage>
			<Usage>Unit-Test</Usage>
		</UsageList>
		<ParameterList>
		</ParameterList>
		<DeploymentAction>
		disqualify_product()
		</DeploymentAction>
	</AdHocRuleAction>
	
	<AdHocRuleAction id="101" name="Recommend Loan">
		<Description>Use this to recommend a loan with a optional message</Description>
		<UsageList>
			<Usage>Product-Qualify</Usage>
			<Usage>Unit-Test</Usage>
		</UsageList>
		<ParameterList>
			<Parameter paramNum="1" name="Comment" deployType="String"/>
			<Parameter paramNum="2" name="EnumValue" deployType="Symbol"/>
		</ParameterList>
		<DeploymentAction>
		disqualify_product(product, "%productID%", comment, "%parameter 1%", enum, "%parameter 2%")
		</DeploymentAction>
	</AdHocRuleAction>
	
	<AdHocRuleAction id="200" name="Adjust Rate">
		<Description>Adjust rate</Description>
		<UsageList>
			<Usage>Rate-Adjustment</Usage>
		</UsageList>
		<ParameterList>
			<Parameter paramNum="1" name="Adjustment Amount" deployType="Float"/>
		</ParameterList>
		<DeploymentAction>
		add_to_rate(amount, "%parameter 1%")
		</DeploymentAction>
	</AdHocRuleAction>

	<GridTemplateDefinition id="999990" name="Template-MathTest" usage="Unit-Test" status="Production" numColumns="2" maxRows="99" >
		<QualificationRule qualificationType="">
			<QualificationCondition>
				if Calculation.CLTV &gt; (%column 1% * Calculation.LTV)
and Calculation.OveragePercent &gt;= (%column 2% + Calculation.RatioFrontEnd)
and Calculation.RatioFrontEnd >= Calculation.RatioBackEnd
then
pe_action(function_name, math_test, row_num, "%rowNumber%", prod_code, "%productID%", scenario_id, "%lineageID%",
          param1, "|Calculation.CLTV|", param2, "|Calculation.HCLTV|")

			</QualificationCondition>
			<Message channel="default">math test message with borrower response of |Calculation.RatioBackEnd|.
			</Message>
		</QualificationRule>
		<ColumnDefinition colNum="1" description="Integer Data" attributeMap="">
			<Presentation title="Integer Data">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="Integer" multipleSelect="No" allowBlank="No" >
				<MinValue>0</MinValue>
				<MaxValue>1000</MaxValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="2" attributeMap="">
			<Presentation title="ColTwo">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="Integer" multipleSelect="No" allowBlank="Yes" >
				<MinValue>0</MinValue>
				<MaxValue>1000</MaxValue>
			</DataSpec>
		</ColumnDefinition>
	</GridTemplateDefinition>

<!-- -->
<!-- -->
	<GridTemplateDefinition id="999991" name="Template-MultiEnumTest:999991" usage="Unit-Test" numColumns="6" maxRows="99"  status="Production" >
		<QualificationRule qualificationType="">
			<QualificationCondition>
				if Transaction.DocumentationType in %column 2% and Transaction.SYMATTR in %column 4%
				and Transaction.PromotionCode between %column 3%
then
pe_action(function_name, math_test, row_num, "%rowNumber%", prod_code, "%productID%", scenario_id, "%lineageID%")

			</QualificationCondition>
			<Message channel="default">math test message.
			</Message>
		</QualificationRule>
		<ColumnDefinition colNum="1" description="Doc Type" attributeMap="">
			<Presentation title="Message-Text">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="String" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="2" description="Doc Type" attributeMap="Transaction.DocumentationType">
			<Presentation title="Doc Type">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="No" allowBlank="No" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="3" attributeMap="">
			<Presentation title="TwoCol">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="IntegerRange" multipleSelect="No" allowBlank="No" >
				<MinValue>-500</MinValue>
				<MaxValue>500</MaxValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="4" description="Occupancy" attributeMap="Transaction.SYMATTR">
			<Presentation title="Occupancy">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="5" description="BirthDate" attributeMap="">
			<Presentation title="BirthDate">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="Date" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="6" description="Doc Type" attributeMap="">
			<Presentation title="Message-Text-2">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="String" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
	</GridTemplateDefinition>

	<GridTemplateDefinition id="999992" name="NotBetween-Test__999992" usage="Unit-Test" numColumns="6" maxRows="9" status="Production"  >
		<QualificationRule qualificationType="">
			<QualificationCondition>
				if !(Calculation.CLTV between %column 1%) and 
				   ~(Calculation.OveragePercent between %column 2%) and
				   Calculation.RatioFrontEnd between %column 1% and
				   Calculation.RatioBackEnd between %column 2% and
				   !(LoanApplication.ApplicationTime between %column 3%) and
				   LoanApplication.ApplicationTime between %column 3% and
				   /*
				   !(LoanApplication.ExtensionTime between %column 4%) and
				   LoanApplication.ExtensionTime between %column 4% and*/
				   /*Transaction.DPA &lt;= %column 4% and */
				   Transaction.PledgedAsset == %column 5% and
				   Borrower.Citizenship in %column 7%  then
pe_action(function_name, math_test, rowNumber, "%rowNumber%", productID, "%productID%", scenario_id, "%lineageID%",
          param1, "|Calculation.CLTV|", categoryID, "%categoryID%", categoryName, "%categoryName%")

			</QualificationCondition>
			<Message channel="default">math test message with borrower response of |Calculation.RatioBackEnd| - %column 6%.
			</Message>
		</QualificationRule>
		<ColumnDefinition colNum="1" description="Integer" attributeMap="">
			<Presentation title="IntegerRange">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="IntegerRange" multipleSelect="No" allowBlank="Yes" >
				<MinValue>0</MinValue>
				<MaxValue>1000</MaxValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="2" attributeMap="">
			<Presentation title="FloatRange">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="FloatRange" multipleSelect="No" allowBlank="Yes" >
				<MinValue>0</MinValue>
				<MaxValue>1000</MaxValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="3" attributeMap="">
			<Presentation title="DateRange">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="DateRange" multipleSelect="No" allowBlank="Yes" >
				<MinValue>1/1/1970</MinValue>
				<MaxValue>12/31/2099</MaxValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="4" attributeMap="">
			<Presentation title="Boolean">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="Boolean" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="5" attributeMap="Some Text">
			<Presentation title="Additional Text">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>200</ColWidth>
			</Presentation>
			<DataSpec type="String" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="6" attributeMap="Borrower.Citizenship">
			<Presentation title="Citizenship">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>200</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
	</GridTemplateDefinition>

	<GridTemplateDefinition id="999993" name="DateColumns-Tester" usage="Unit-Test" status="Production" numColumns="5" maxRows="99" >
		<QualificationRule qualificationType="">
			<QualificationCondition>
if 
	LoanApplication.ApplicationTime between %column 1% and
	LoanApplication.ExtensionTime between %column 2% and
	~(LoanApplication.ApplicationTime between %column 1%) and
	~(LoanApplication.ExtensionTime between %column 2%) 	
then
	pe_action(function_name, daterangetest, message-text, "%column 3%")

			</QualificationCondition>
			<Message channel="default">math test message.
			</Message>
		</QualificationRule>
		<ColumnDefinition colNum="1" description="Date-Range" attributeMap="">
			<Presentation title="Date-Range">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="DateRange" multipleSelect="No" allowBlank="No" >
				<MinValue>1/1/1970</MinValue>
				<MaxValue>12/31/2099</MaxValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="2" description="Date-Range Optional" attributeMap="">
			<Presentation title="Date-Range Optional">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="DateRange" multipleSelect="No" allowBlank="Yes" >
				<MinValue>1/1/1970</MinValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="3" attributeMap="">
			<Presentation title="DateTime-Range">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>160</ColWidth>
			</Presentation>
			<DataSpec type="DateTimeRange" multipleSelect="No" allowBlank="No" >
				<MinValue>1/1/1900</MinValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="4" attributeMap="">
			<Presentation title="DateTime-Range Optional">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="DateTimeRange" multipleSelect="No" allowBlank="Yes" >
				<MaxValue>12/31/2999</MaxValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="5" description="Text" attributeMap="">
			<Presentation title="Text Message">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>200</ColWidth>
			</Presentation>
			<DataSpec type="String" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
	</GridTemplateDefinition>

	<GridTemplateDefinition id="988880" name="Numberic-Tester" usage="Unit-Test" status="Production" numColumns="6" maxRows="32" >
		<QualificationRule qualificationType="">
			<QualificationCondition>
if 
	Borrower.CreditScore == %column 1% and
	Borrower.CreditScore between %column 2% and
	Borrower.Debt == %column 3% and
	Borrower.Debt between %column 4% and
	Borrower.Income == %column 5% and
	Borrower.Income between %column 6%
then
	pe_action(function_name, numeric_field_test)

			</QualificationCondition>
			<Message channel="default">math test message.
			</Message>
		</QualificationRule>
		<ColumnDefinition colNum="1" description="Integer" attributeMap="">
			<Presentation title="Integer">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="Integer" multipleSelect="No" allowBlank="No" >
				<MinValue>0</MinValue>
				<MaxValue>10000000</MaxValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="2" description="Integer Range" attributeMap="">
			<Presentation title="Integer Range">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>200</ColWidth>
			</Presentation>
			<DataSpec type="IntegerRange" multipleSelect="No" allowBlank="Yes" >
				<MinValue>0</MinValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="3" attributeMap="">
			<Presentation title="Float">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="Float" multipleSelect="No" allowBlank="No" >
				<MinValue>0</MinValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="4" attributeMap="">
			<Presentation title="Float Range">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>200</ColWidth>
			</Presentation>
			<DataSpec type="FloatRange" multipleSelect="No" allowBlank="Yes" >
				<MinValue>0</MinValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="5" attributeMap="">
			<Presentation title="Currency">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="Currency" multipleSelect="No" allowBlank="No" >
				<MinValue>0</MinValue>
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="6" attributeMap="">
			<Presentation title="Currency Range">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>200</ColWidth>
			</Presentation>
			<DataSpec type="CurrencyRange" multipleSelect="No" allowBlank="Yes" >
				<MinValue>0</MinValue>
			</DataSpec>
		</ColumnDefinition>
	</GridTemplateDefinition>

	<GridTemplateDefinition id="999994" name="Rule-Tester" usage="Unit-Test" status="Production" numColumns="4" maxRows="7" >
		<ColumnDefinition colNum="1" description="Doc Type" attributeMap="Transaction.DocumentationType">
			<Presentation title="Doc Type">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
			<Message channel="default">Because documentation type is %column 1%, %column 4%
			</Message>
			<DeploymentRule>
				if exists Group with (exists Transaction with (DocumentationType == %column 1%)) then reject(message_text, "%column 4%")
			</DeploymentRule>
		</ColumnDefinition>
		<ColumnDefinition colNum="2" description="citizenship" attributeMap="Borrower.Citizenship">
			<Presentation title="Citizenship">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
			<Message channel="default">Because borrower is %column 2%, %column 3%
			</Message>
			<DeploymentRule>
				if exists Borrower with (Citizenship in %column 2%) then reject(message_text, "%column 4%")
			</DeploymentRule>
		</ColumnDefinition>
		<ColumnDefinition colNum="3" description="newly-added" attributeMap="Borrower.Citizenship">
			<Presentation title="NewColumn-Multi-Citizenship">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="Yes" allowBlank="Yes" >
			</DataSpec>
			<Message channel="default">Because borrower is %column 3%, %column 3%
			</Message>
			<DeploymentRule>
				if exists Group with (Transaction.DocumentationType == %column 1% and Borrower.Citizenship in %column 3%) and 
				Transaction.DocumentationType == %column 1% then reject(message_text, "%column 4%")
			</DeploymentRule>
		</ColumnDefinition>
		<ColumnDefinition colNum="4" description="message text" attributeMap="">
			<Presentation title="Message Text">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>150</ColWidth>
			</Presentation>
			<DataSpec type="String" multipleSelect="No" allowBlank="No" >
			</DataSpec>
		</ColumnDefinition>
	</GridTemplateDefinition>

	<ParameterTemplateDefinition id="8000" name="MI Parameters" status="Draft" maxRows="10" >
	   <Description>Parameters for the Pricing Engine</Description>
		  <!-- MI Company -->
			<ColumnDefinition colNum="1" description="MI Company" attributeMap="MIParameters.MICompany">
				<Presentation title="MI Company">
					<Font>arial</Font>
					<Color>automatic</Color>
					<ColWidth>100</ColWidth>
				</Presentation>
				<DataSpec type="EnumList" multipleSelect="Yes" allowBlank="No" >
				</DataSpec>
			</ColumnDefinition>
		  <!-- Min Premium -->
		  <ColumnDefinition colNum="2" description="Min Premium" attributeMap="MIParameters.MinPremium">
			 <Presentation title="Min Premium">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>180</ColWidth>
			 </Presentation>
			 <DataSpec type="Float" multipleSelect="No" allowBlank="No">
				<MinValue>0</MinValue>
				<MaxValue>100</MaxValue>
			  </DataSpec>
		  </ColumnDefinition>
		  <!-- Min Renewal -->
		  <ColumnDefinition colNum="3" description="Min Renewal" attributeMap="MIParameters.MinRenewal">
			 <Presentation title="Min Renewal">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>180</ColWidth>
			 </Presentation>
			 <DataSpec type="Float" multipleSelect="No" allowBlank="No">
				<MinValue>0</MinValue>
				<MaxValue>100</MaxValue>
			  </DataSpec>
		  </ColumnDefinition>
		  <!-- Max Renewal -->
		  <ColumnDefinition colNum="4" description="Max Renewal" attributeMap="MIParameters.MaxRenewal">
			 <Presentation title="Max Renewal">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>180</ColWidth>
			 </Presentation>
			 <DataSpec type="Float" multipleSelect="No" allowBlank="No">
				<MinValue>0</MinValue>
				<MaxValue>100</MaxValue>
			  </DataSpec>
		  </ColumnDefinition>
	</ParameterTemplateDefinition>
<!--
	<ParameterTemplateDefinition id="200100" name="First Parameter Template" status="Production" maxRows="10" >
		<Description>This is the first parameter template.</Description>
		<ColumnDefinition colNum="1" description="Doc Type" attributeMap="Parameter.DocumentationType">
			<Presentation title="Documentation Type">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>180</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="No" allowBlank="No" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="2" description="Occupancy" attributeMap="Parameter.Occupancy">
			<Presentation title="Occupancy">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="3" description="Global Max Loan Limit" attributeMap="Parameter.LoanLimit">
			<Presentation title="Global Max Loan Limit">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="Float" multipleSelect="No" allowBlank="Yes">
				<MinValue>0</MinValue>
				<MaxValue>100000000</MaxValue>
			</DataSpec>
		</ColumnDefinition>
	</ParameterTemplateDefinition>

	<ParameterTemplateDefinition id="200200" name="Second Parameter Template" status="Production" maxRows="99" >
		<Description>This is the first parameter template.</Description>
		<ColumnDefinition colNum="1" description="Global Max Loan Limit" attributeMap="Parameter.DocumentationType">
			<Presentation title="DocumentationType">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>180</ColWidth>
			</Presentation>
			<DataSpec type="EnumList" multipleSelect="No" allowBlank="Yes" >
			</DataSpec>
		</ColumnDefinition>
		<ColumnDefinition colNum="2" description="Global OveragePercent" attributeMap="Parameter.OveragePercent">
			<Presentation title="Global Overage Percent">
				<Font>arial</Font>
				<Color>automatic</Color>
				<ColWidth>100</ColWidth>
			</Presentation>
			<DataSpec type="Float" multipleSelect="No" allowBlank="Yes">
				<MinValue>0</MinValue>
				<MaxValue>100000000</MaxValue>
			</DataSpec>
		</ColumnDefinition>
	</ParameterTemplateDefinition>
-->
<!-- -->
</EditorDefinitions>
